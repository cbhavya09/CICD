name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

jobs:
  deploy:
    runs-on: self-hosted

    env:
      GH_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      GH_HOSTNAME: ${{ secrets.GH_HOSTNAME }}
      TOMCAT_USERNAME: ${{ secrets.TOMCAT_USERNAME }}
      TOMCAT_PASSWORD: ${{ secrets.TOMCAT_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Java
        run: |
          echo "JAVA_HOME=C:\Program Files\Java\jdk-11" >> $GITHUB_ENV
          echo "PATH=$JAVA_HOME/bin:$PATH" >> $GITHUB_ENV

      - name: Download artifact
        run: |
          gh release download v4.4.3 -p "helloworld-2.6.jar" --repo cbhavya09/cicd

      - name: Convert JAR to WAR
        run: |
          # Replace 'helloworld-2.6.jar' and 'webapp.war' with appropriate names
          jar -cvf webapp.war -C C:\Users\c.bhavya\Desktop\java\helloworld-2.6.jar

      - name: Copy WAR file to Tomcat webapps
        run: |
          Copy-Item -Path "webapp.war" -Destination "C:\apache-tomcat-10.1.13\webapps" -Force

      - name: Check if Tomcat is running
        run: |
          $tomcatRunning = Test-NetConnection -ComputerName "localhost" -Port 8080
          if ($tomcatRunning.TcpTestSucceeded -eq $true) { exit 0 } else { exit 1 }
          
      - name: Wait for Tomcat to start
        run: Start-Sleep -s 60  # Wait for Tomcat to fully start (adjust the delay as needed)

      - name: Verify deployment
        run: |
          # Verify that the application is accessible
          # You should specify the correct URL for your application here
          $response = Invoke-WebRequest -Uri "http://localhost:8080/webapp" -Method Get
          if ($response.StatusCode -eq 200) {
              Write-Host "Deployment successful."
          } else {
              Write-Host "Deployment failed with status code $($response.StatusCode)."                
          }
