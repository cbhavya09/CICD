name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

jobs:
  deploy:
    runs-on: self-hosted

    env:
      GH_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      GH_HOSTNAME: ${{ secrets.GH_HOSTNAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Java
        run: |
          echo "JAVA_HOME=C:\Program Files\Java\jdk-11" >> $GITHUB_ENV
          echo "PATH=$JAVA_HOME/bin:$PATH" >> $GITHUB_ENV

      - name: Download artifact
        run: |
          # Download the my-java-app.zip asset from release v4.1.0
          gh release download v4.1.0 -D . -p "my-java-app.zip" --repo cbhavya09/cicd

      - name: Extract artifact
        run: Expand-Archive -Path "./my-java-app.zip" -DestinationPath "C:\apache-tomcat-10.1.13\webapps\my-java-app"

        
      - name: Set up Tomcat
        run: |
          $env:TOMCAT_HOME = "C:\apache-tomcat-10.1.13"
          $env:PATH = "$env:PATH;$env:TOMCAT_HOME\bin"
  
      - name: Check if Tomcat is running
        run: |
          $tomcatRunning = Test-NetConnection -ComputerName "localhost" -Port 8080
          if ($tomcatRunning.TcpTestSucceeded -eq $true) { exit 0 } else { exit 1 }
  
      - name: Navigate to the directory containing your web application files
        run: |
            $webappDir = "C:\apache-tomcat-10.1.13\webapps\my-java-app"  # Update this path to the correct location
            if (Test-Path -Path $webappDir -PathType Container) {
              Set-Location -Path $webappDir
            } else {
              Write-Host "Directory $webappDir does not exist."
              exit 1  # Exit the script with an error code
            }
        
      - name: Create a .war file using the 'jar' command
        run: |
            # Create a .war file using the 'jar' command
            jar -cvf "../myapp.war" *
        

      - name: Deploy to Tomcat
        run: |
          # Define your variables
          $env:TOMCAT_URL = "http://localhost:8080/"
          $env:TOMCAT_USERNAME = "deploy"
          $env:TOMCAT_PASSWORD = "varshu"
          $env:APP_PATH = "/myapp"  # Context path for your application
          $env:WAR_FILE_PATH = "C:\apache-tomcat-10.1.13\webapps\myapp.war"  # Path to your WAR file
        
          # Deploy using Invoke-WebRequest
          Invoke-WebRequest -Uri "$env:TOMCAT_URL$env:APP_PATH" -Method PUT -InFile $env:WAR_FILE_PATH -Credential (New-Object System.Management.Automation.PSCredential($env:TOMCAT_USERNAME, (ConvertTo-SecureString $env:TOMCAT_PASSWORD -AsPlainText -Force)))
