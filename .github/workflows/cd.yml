name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

jobs:
  deploy:
    runs-on: self-hosted

    env:
      GH_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      GH_HOSTNAME: ${{ secrets.GH_HOSTNAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Java
        run: |
          echo "JAVA_HOME=C:\Program Files\Java\jdk-11" >> $GITHUB_ENV
          echo "PATH=$JAVA_HOME/bin:$PATH" >> $GITHUB_ENV

      - name: Download artifact
        run: |
          gh release download v4.4.3 -p "my-java-app.zip" --repo cbhavya09/cicd

      - name: Extract artifact
        run: Expand-Archive -Path "C:\Users\c.bhavya\Desktop\demo\demo\actions-runner\_work\cicd\cicd\my-java-app.zip" -DestinationPath "C:\Users\c.bhavya\Desktop\cicd\my-java-app"

      - name: Convert JAR to WAR
        run: |
          # Define the paths
          $JAR_FILE_PATH = "C:\Users\c.bhavya\Desktop\cicd\my-java-app\helloworld-2.6.jar"
          $WAR_FILE_PATH = "C:\Users\c.bhavya\Desktop\cicd\my-java-app\myapp.war"

          # Create a new directory for the WAR file
          New-Item -Path $WAR_FILE_PATH -ItemType Directory

          # Copy the JAR file to the new directory as the root of the WAR file
          Copy-Item -Path $JAR_FILE_PATH -Destination $WAR_FILE_PATH

          # Rename the JAR file to your application name (e.g., myapp.jar)
          Rename-Item -Path (Join-Path $WAR_FILE_PATH "helloworld-2.6.jar") -NewName "myapp.jar"

          # Create a web.xml file (replace with your configuration)
          Set-Content -Path (Join-Path $WAR_FILE_PATH "WEB-INF\web.xml") -Value "<web-app>...</web-app>"

      - name: Copy WAR file to Tomcat webapps
        run: Copy-Item -Path "C:\Users\c.bhavya\Desktop\cicd\my-java-app\myapp.war" -Destination "C:\apache-tomcat-10.1.13\webapps" -Recurse

      - name: Set up Tomcat
        run: |
          $env:TOMCAT_HOME = "C:\apache-tomcat-10.1.13"
          $env:PATH = "$env:PATH;$env:TOMCAT_HOME\bin"

      - name: Check if Tomcat is running
        run: |
          $tomcatRunning = Test-NetConnection -ComputerName "localhost" -Port 8080
          if ($tomcatRunning.TcpTestSucceeded -eq $true) { exit 0 } else { exit 1 }

      - name: Deploy WAR to Tomcat
        run: |
          Write-Host "Deployment successful."

