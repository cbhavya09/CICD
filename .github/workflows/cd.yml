name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

jobs:
  deploy:
    runs-on: self-hosted

    env:
      GH_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      GH_HOSTNAME: ${{ secrets.GH_HOSTNAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Java
        run: |
          echo "JAVA_HOME=C:\Program Files\Java\jdk-11" >> $GITHUB_ENV
          echo "PATH=$JAVA_HOME/bin:$PATH" >> $GITHUB_ENV
          
      - name: Download artifact
        run: |
          gh release download v4.4.3 -p "my-java-app.zip" --repo cbhavya09/cicd
      
      - name: Extract artifact
        run: Expand-Archive -Path "C:\Users\c.bhavya\Desktop\demo\demo\actions-runner\_work\cicd\cicd\my-java-app.zip" -DestinationPath "C:\Users\c.bhavya\Desktop\cicd\my-java-app"
        
      - name: Copy artifact to Tomcat webapps
        run: Copy-Item -Path "C:\Users\c.bhavya\Desktop\cicd\my-java-app\helloworld-2.6.jar" -Destination "C:\apache-tomcat-10.1.13\webapps" -Recurse
  
      - name: Set up Tomcat
        run: |
          $env:TOMCAT_HOME = "C:\apache-tomcat-10.1.13"
          $env:PATH = "$env:PATH;$env:TOMCAT_HOME\bin"
  
      - name: Check if Tomcat is running
        run: |
          $tomcatRunning = Test-NetConnection -ComputerName "localhost" -Port 8080
          if ($tomcatRunning.TcpTestSucceeded -eq $true) { exit 0 } else { exit 1 }
  
      # - name: Create WAR file
        #run: |
          # Navigate to the directory containing your web application files
          #cd "C:\apache-tomcat-10.1.13\webapps"
  
          # Create a .war file using the 'jar' command
          #jar -cvf "C:\apache-tomcat-10.1.13\webapps\myapp.war" *
  
      - name: Deploy to Tomcat
        run: |
            # Define the Tomcat manager URL and credentials
            $TOMCAT_URL = "http://localhost:8080/manager/text"
            $TOMCAT_USERNAME = "deploy"
            $TOMCAT_PASSWORD = "varshu"
        
            # Convert the credentials to a Base64-encoded string
            $Base64AuthInfo = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes("${TOMCAT_USERNAME}:${TOMCAT_PASSWORD}"))
        
            # Create the headers for the request with the Authorization header
            $headers = @{
                Authorization = "Basic $Base64AuthInfo"
            }
        
            # Define the deployment path and WAR file path
            $APP_PATH = ""  # Root context path for your applications
            $WAR_FILE_PATH = "C:\apache-tomcat-10.1.13\webapps\myapp.war"  # Path to your WAR file
        
            # Deploy the WAR file to Tomcat
            $response = Invoke-WebRequest -Uri "$TOMCAT_URL/deploy?path=$APP_PATH&update=true" -Headers $headers -Method PUT -InFile $WAR_FILE_PATH
        
            # Check if the deployment was successful
            if ($response.StatusCode -eq 200) {
                Write-Host "Deployment successful."
            } else {
                Write-Host "Deployment failed with status code $($response.StatusCode)."
                Write-Host "Response content: $($response.Content)"
            }
        
